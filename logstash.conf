
input {
  file {
    type => "bro-conn"
    start_position => "beginning"
    sincedb_path => "/var/tmp/.bro_conn_sincedb"
    codec => json
    path => "/data/bro/logs/current/conn.log"
  }
  file {
    type => "bro-http"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_http_sincedb"
    path => "/data/bro/logs/current/http.log"
  }
  file {
    type => "bro-dns"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_dns_sincedb"
    path => "/data/bro/logs/current/dns.log"
  }
  file {
    type => "bro-files"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_files_sincedb"
    path => "/data/bro/logs/current/files.log"
  }
  file {
    type => "bro-ssl"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_ssl_sincedb"
    path => "/data/bro/logs/current/ssl.log"
  }
  file {
    type => "bro-x509"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_x509_sincedb"
    path => "/data/bro/logs/current/x509.log"
  }
  file {
    type => "bro-software"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_software_sincedb"
    path => "/data/bro/logs/current/software.log"
  }
  file {
    type => "bro-dpd"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_dpd_sincedb"
    path => "/data/bro/logs/current/dpd.log"
  }
  file {
    type => "bro-kerberos"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_kerberos_sincedb"
    path => "/data/bro/logs/current/kerberos.log"
  }
  file {
    type => "bro-tunnel"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_tunnel_sincedb"
    path => "/data/bro/logs/current/tunnel.log"
  }
  file {
    type => "bro-socks"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_socks_sincedb"
    path => "/data/bro/logs/current/socks.log"
  }
  file {
    type => "bro-ntlm"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_ntlm_sincedb"
    path => "/data/bro/logs/current/ntlm.log"
  }
  file {
    type => "bro-smb_mapping"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_smb_mapping_sincedb"
    path => "/data/bro/logs/current/smb_mapping.log"
  }
  file {
    type => "bro-known_services"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_known_services_sincedb"
    path => "/data/bro/logs/current/known_services.log"
  }
  file {
    type => "bro-ssh"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_ssh_sincedb"
    path => "/data/bro/logs/current/ssh.log"
  }
  file {
    type => "bro-smb_files"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_smb_files_sincedb"
    path => "/data/bro/logs/current/smb_files.log"
  }
  file {
    type => "bro-rdp"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_rdp_sincedb"
    path => "/data/bro/logs/current/rdp.log"
  }
  file {
    type => "bro-ftp"
    start_position => "beginning"
    codec => json
    sincedb_path => "/var/tmp/.bro_ftp_sincedb"
    path => "/data/bro/logs/current/ftp.log"
  }
}

filter {

  if [message] =~ /^#/ {
    drop { }
  }

  if [type] == "bro-http" {
    json {

      source => "message"
    }

    date {
      match => [ "ts", "UNIX" ]
    }

    geoip {
      source => "id.orig_h"
      target => "orig_geoip"
    }
    geoip {
      source => "id.resp_h"
      target => "resp_geoip"
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      convert => [ "trans_depth", "integer" ]
      convert => [ "request_body_len", "integer" ]
      convert => [ "response_body_len", "integer" ]
      convert => [ "status_code", "integer" ]
      convert => [ "info_code", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "user_agent", "agent"]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-conn" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    geoip {
      source => "id.orig_h"
      target => "orig_geoip"
    }
    geoip {
      source => "id.resp_h"
      target => "resp_geoip"
    }

    translate {
      field => "conn_state"

      destination => "conn_state_full"

      dictionary => [
                    "S0", "Connection attempt seen, no reply",
                    "S1", "Connection established, not terminated",
                    "S2", "Connection established and close attempt by originator seen (but no reply from responder)",
                    "S3", "Connection established and close attempt by responder seen (but no reply from originator)",
                    "SF", "Normal SYN/FIN completion",
                    "REJ", "Connection attempt rejected",
                    "RSTO", "Connection established, originator aborted (sent a RST)",
                    "RSTR", "Established, responder aborted",
                    "RSTOS0", "Originator sent a SYN followed by a RST, we never saw a SYN-ACK from the responder",
                    "RSTRH", "Responder sent a SYN ACK followed by a RST, we never saw a SYN from the (purported) originator",
                    "SH", "Originator sent a SYN followed by a FIN, we never saw a SYN ACK from the responder (hence the connection was 'half' open)",
                    "SHR", "Responder sent a SYN ACK followed by a FIN, we never saw a SYN from the originator",
                    "OTH", "No SYN seen, just midstream traffic (a 'partial connection' that was not later closed)"
                    ]
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      convert => [ "orig_bytes", "integer" ]
      convert => [ "duration", "float" ]
      convert => [ "resp_bytes", "integer" ]
      convert => [ "missed_bytes", "integer" ]
      convert => [ "orig_pkts", "integer" ]
      convert => [ "orig_ip_bytes", "integer" ]
      convert => [ "resp_pkts", "integer" ]
      convert => [ "resp_ip_bytes", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-dns" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    geoip {
      source => "id.orig_h"
      target => "orig_geoip"
    }
    geoip {
      source => "id.resp_h"
      target => "resp_geoip"
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      convert => [ "trans_id", "integer" ]
      convert => [ "qclass", "integer" ]
      convert => [ "qtype", "integer" ]
      convert => [ "rcode", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-files" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    geoip {
      source => "tx_hosts"
      target => "tx_hosts_geoip"
    }
    geoip {
      source => "rx_hosts"
      target => "rx_hosts_geoip"
    }

    mutate {
      convert => [ "duration", "float" ]
      convert => [ "depth", "integer" ]
      convert => [ "seen_bytes", "integer" ]
      convert => [ "total_bytes", "integer" ]
      convert => [ "missing_bytes", "integer" ]
      convert => [ "overflow_bytes", "integer" ]
      rename =>  [ "tx_hosts", "sip" ]
      rename =>  [ "rx_hosts", "dip" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-ssl" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    geoip {
      source => "id.orig_h"
      target => "orig_geoip"
    }
    geoip {
      source => "id.resp_h"
      target => "resp_geoip"
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]
    }

    if [subject] == "-" {
      mutate {
        remove_field => [ "subject" ]
      }
    }
    if [issuer] == "-" {
      mutate {
        remove_field => [ "issuer" ]
      }
    }
    if [server_name] {
      if [server_name] == "-" {
        mutate {
          remove_field => [ "server_name" ]
        }
      } 
    }

    if [client_issuer] == "-" {
      mutate {
        remove_field => [ "client_issuer" ]
      }
    }
    if [client_subject] == "-" {
      mutate {
        remove_field => [ "client_subject" ]
      }
    }
    if [curve] == "-" {
      mutate {
        remove_field => [ "curve" ]
      }
    }
    if [issuer] == "-" {
      mutate {
        remove_field => [ "issuer" ]
      }
    }
    if [subject] == "-" {
      mutate {
        remove_field => [ "subject" ]
      }
    }
    if [validation_status] == "-" {
      mutate {
        remove_field => [ "validation_status" ]
      }
    }
    if [ja3] == "-" {
      mutate {
        remove_field => [ "ja3" ]
      }
    }
    if [ja3s] == "-" {
      mutate {
        remove_field => [ "ja3s" ]
      }
    }
  }
  if [type] == "bro-x509" {
    json {

      source => "message"
    }

    date {
      match => [ "ts", "UNIX" ]

    }
    
    mutate {
      rename =>  [ "certificate.version", "certificate_version" ]
      rename =>  [ "certificate.serial", "certificate_serial" ]
      rename =>  [ "certificate.subject", "certificate_subject" ]
      rename =>  [ "icertificate.issuer", "icertificate_issuer" ]
      rename =>  [ "certificate.not_valid_before", "certificate_not_valid_before" ]
      rename =>  [ "certificate.not_valid_after", "certificate_not_valid_after" ]
      rename =>  [ "certificate.key_alg", "certificate_key_alg" ]
      rename =>  [ "certificate.sig_alg", "certificate_sig_alg" ]
      rename =>  [ "certificate.key_type", "certificate_key_type" ]
      rename =>  [ "certificate.key_length", "certificate_key_length" ]
      rename =>  [ "certificate.exponent", "certificate_exponent" ]
      rename =>  [ "certificate.curve", "certificate_curve" ]
      rename =>  [ "san.dns", "san_dns" ]
      rename =>  [ "san.uri", "san_uri" ]
      rename =>  [ "san.email", "san_email" ]
      rename =>  [ "san.ip", "san_ip" ]
      rename =>  [ "basic_constraints.ca", "basic_constraints_ca" ]
      rename =>  [ "basic_constraints.path_len", "basic_constraints_path_len" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-software" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]

    }
    
    mutate {
      convert => [ "host_p", "integer" ]
      convert => [ "version.major", "integer" ]
      rename =>  [ "host", "sip" ]
      rename =>  [ "host_p", "sport" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-dpd" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]

    }
    
    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-kerberos" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-tunnel" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    geoip {
      source => "id.orig_h"
      target => "orig_geoip"
    }
    geoip {
      source => "id.resp_h"
      target => "resp_geoip"
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-socks" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    geoip {
      source => "id.orig_h"
      target => "orig_geoip"
    }
    geoip {
      source => "id.resp_h"
      target => "resp_geoip"
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      convert => [ "version", "integer" ]
      convert => [ "request_p", "integer" ]
      convert => [ "bound_p", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename =>  [ "request_p", "request_port" ]
      rename =>  [ "bound_p", "bound_port" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-ntlm" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename =>  [ "username", "dcuser" ]
      rename =>  [ "hostname", "dchost" ]
      rename =>  [ "domainname", "dcserver" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-smb_mapping" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]
    }
  }
  if [type] == "bro-known_services" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    mutate {
      convert => [ "port_num", "integer" ]
      rename =>  [ "port_num", "dport" ]
      rename =>  [ "host", "dip" ]
      rename => [ "ts" , "timestamp" ]

    }
  }
  if [type] == "bro-ssh" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]

    }
  }
  if [type] == "bro-smb_files" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      convert => [ "size", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]

    }
  }
  if [type] == "bro-rdp" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]

    }
  }
  if [type] == "bro-ftp" {
    json {

      source => "message"
    }


    date {
      match => [ "ts", "UNIX" ]
    }

    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      convert => [ "file_size", "integer" ]
      convert => [ "reply_code", "integer" ]
      rename =>  [ "id.orig_h", "sip" ]
      rename =>  [ "id.orig_p", "sport" ]
      rename =>  [ "id.resp_h", "dip" ]
      rename =>  [ "id.resp_p", "dport" ]
      rename => [ "ts" , "timestamp" ]

    }
  }
}

output {  
  stdout {
        codec => rubydebug
    }
  if [type] == "bro-conn" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-conn-%{+YYYY.MM.dd}"  
        }  
    }  
  if [type] == "bro-http" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-http-%{+YYYY.MM.dd}"  
        }  
    } 
  if [type] == "bro-dns" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-dns-%{+YYYY.MM.dd}"  
        }  
    }  
  if [type] == "bro-files" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-files-%{+YYYY.MM.dd}"  
        }  
    }  
  if [type] == "bro-ssl" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-ssl-%{+YYYY.MM.dd}"  
        }  
    }
  if [type] == "bro-x509" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-x509-%{+YYYY.MM.dd}"  
        }  
    }
  if [type] == "bro-software" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-software-%{+YYYY.MM.dd}"  
        }  
    }
  if [type] == "bro-dpd" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-dpd-%{+YYYY.MM.dd}"  
        }  
    }
  if [type] == "bro-kerberos" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-kerberos-%{+YYYY.MM.dd}"  
        }  
    }
  if [type] == "bro-tunnel" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-tunnel-%{+YYYY.MM.dd}"  
        }  
    }
  if [type] == "bro-socks" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-socks-%{+YYYY.MM.dd}"  
        }  
    } 
  if [type] == "bro-ntlm" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-ntlm-%{+YYYY.MM.dd}"  
        }  
    } 
  if [type] == "bro-smb_mapping" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-smb_mapping-%{+YYYY.MM.dd}"  
        }  
    } 
  if [type] == "bro-known_services" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-known_services-%{+YYYY.MM.dd}"  
        }
    }  
  if [type] == "bro-ssh" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-ssh-%{+YYYY.MM.dd}"  
        }
    } 
  if [type] == "bro-smb_files" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-smb_files-%{+YYYY.MM.dd}"  
        }
      }
  if [type] == "bro-rdp" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-rdp-%{+YYYY.MM.dd}"  
        }
    }
  if [type] == "bro-ftp" {  
    elasticsearch {  
        hosts => ["localhost:9200"]  
        index => "logstash-bro-ftp-%{+YYYY.MM.dd}"  
        }
    }
} 
